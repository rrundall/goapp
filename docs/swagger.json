{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple book library server.",
        "title": "Book Library API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/books": {
            "get": {
                "description": "For listing books per page.\nBy default will order by book_id and displays 1000 books in a page.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get Books",
                "parameters": [
                    {
                        "type": "string",
                        "default": "book_id",
                        "description": "Order by field",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "minimum": 5,
                        "type": "integer",
                        "default": 25,
                        "description": "Results per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "For updating a book by book_id.\nWill return number of row that is updated, if there is no row updated, will return no data update with 0 row affected.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Update Book by book_id",
                "parameters": [
                    {
                        "description": "Fields Required: ALL. Fields cannot be empty. Unique fields: isbn.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "415": {
                        "description": "Unsupported Media Type"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "For inserting single/multiple books.\nWill return number of rows that are inserted, if there is no row updated, will return no data update with 0 row affected.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Insert Books",
                "parameters": [
                    {
                        "description": "Fields Required: ALL except book_id. Fields cannot be empty. Unique fields: isbn. If book_id is included it will be ignored.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Book"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "415": {
                        "description": "Unsupported Media Type"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "For updating a book by book_id.\nWill return number of row that is updated, if there is no row updated, will return no data update with 0 row affected.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Update Book by book_id",
                "parameters": [
                    {
                        "description": "Fields Required: book_id. Empty fields will be ignored. Unique fields: isbn.",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "415": {
                        "description": "Unsupported Media Type"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/books/get": {
            "post": {
                "description": "For searching books with AND criteria and using WHERE column = string pattern.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Find Matching Books",
                "parameters": [
                    {
                        "description": "Fields Required: At least one. Empty fields will be ignored",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "415": {
                        "description": "Unsupported Media Type"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/books/search": {
            "post": {
                "description": "For searching books with OR criteria and using LIKE %string% pattern.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Search Books",
                "parameters": [
                    {
                        "description": "Fields Required: At least one. Empty fields will be ignored",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "415": {
                        "description": "Unsupported Media Type"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/books/{id}": {
            "delete": {
                "description": "For deleting book by id.\nHeader is required for content-type.\nWill return number of row that is deleted, if there is no row deleted, will return no data update with 0 row affected.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Delete Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The book_id to be deleted.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Book": {
            "type": "object",
            "properties": {
                "author_name": {
                    "type": "string"
                },
                "author_surname": {
                    "type": "string"
                },
                "book_id": {
                    "type": "integer"
                },
                "isbn": {
                    "type": "string"
                },
                "published": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}